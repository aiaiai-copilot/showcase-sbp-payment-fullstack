{
  "hooks": {
    "PostToolUse": [
      {
        "name": "format-code",
        "description": "Auto-format code files after editing",
        "command": "if [[ \"$TOOL\" == \"Edit\" || \"$TOOL\" == \"Write\" ]]; then\n  FILE=\"$1\"\n  if [[ \"$FILE\" == *.ts || \"$FILE\" == *.tsx || \"$FILE\" == *.js || \"$FILE\" == *.jsx ]]; then\n    if command -v prettier &> /dev/null; then\n      prettier --write \"$FILE\" 2>/dev/null || true\n    fi\n  fi\nfi"
      },
      {
        "name": "validate-openapi-changes",
        "description": "Validate OpenAPI specs after changes",
        "command": "if [[ \"$TOOL\" == \"Edit\" || \"$TOOL\" == \"Write\" ]]; then\n  FILE=\"$1\"\n  if [[ \"$FILE\" == *specs/*.yaml ]]; then\n    if command -v npx &> /dev/null; then\n      echo \"Validating OpenAPI spec: $FILE\"\n      npx @redocly/cli lint \"$FILE\" || echo \"Warning: OpenAPI validation failed\"\n    fi\n  fi\nfi"
      }
    ],
    "UserPromptSubmit": [
      {
        "name": "api-first-reminder",
        "description": "Remind about API-First approach when implementing APIs",
        "command": "if echo \"$PROMPT\" | grep -qi \"api\\|endpoint\\|route\"; then\n  echo \"Reminder: Follow API-First approach - ensure OpenAPI spec exists before implementation.\"\nfi"
      }
    ]
  },
  "allowedTools": [
    "Read",
    "Write",
    "Edit",
    "Glob",
    "Grep",
    "Bash",
    "WebFetch",
    "WebSearch",
    "TodoWrite"
  ],
  "allowedDomains": [
    "yookassa.ru",
    "docs.yookassa.ru",
    "github.com",
    "stackoverflow.com",
    "developer.mozilla.org",
    "react.dev",
    "fastify.dev",
    "vitest.dev",
    "ui.shadcn.com"
  ]
}
